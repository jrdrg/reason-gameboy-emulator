// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Cpu$GameboyEmulator = require("./Cpu.bs.js");
var Mmu$GameboyEmulator = require("./Mmu.bs.js");
var Utils$GameboyEmulator = require("./Utils.bs.js");

function make() {
  var canvas = Curry._1(Utils$GameboyEmulator.Canvas[/* getContextFromId */0], "screen");
  var screen = canvas.createImageData(160, 144);
  var screenData = screen.data;
  $$Array.iteri((function (idx, _) {
          return Caml_array.caml_array_set(screenData, idx, 100);
        }), screenData);
  canvas.putImageData(screen, 0, 0);
  return /* record */[
          /* canvas */canvas,
          /* screen */screen,
          /* vram */Caml_array.caml_make_vect(8192, 0),
          /* oam */Caml_array.caml_make_vect(160, 0)
        ];
}

var Gpu = /* module */[/* make */make];

function load(bytes) {
  console.log("Loaded, ROM length: ", bytes.length);
  var mmu = Mmu$GameboyEmulator.load(bytes);
  var b = Mmu$GameboyEmulator.read8(2, mmu);
  console.log("Byte:", b);
  return /* record */[
          /* frameCount */0,
          /* fps */0,
          /* gpu */make(/* () */0),
          /* cpu */Cpu$GameboyEmulator.make(/* () */0),
          /* mmu */mmu
        ];
}

function reset(state) {
  return /* record */[
          /* frameCount */state[/* frameCount */0] + 1 | 0,
          /* fps */0,
          /* gpu */make(/* () */0),
          /* cpu */state[/* cpu */3],
          /* mmu */Mmu$GameboyEmulator.reset(state[/* mmu */4])
        ];
}

function frame(s) {
  var programCount = Cpu$GameboyEmulator.programCount(s[/* cpu */3]) + 1 | 0;
  var init = s[/* cpu */3];
  var init$1 = s[/* cpu */3][/* registers */1];
  var cpuIncPc_000 = /* clock */init[/* clock */0];
  var cpuIncPc_001 = /* registers : record */[
    /* a */init$1[/* a */0],
    /* b */init$1[/* b */1],
    /* c */init$1[/* c */2],
    /* d */init$1[/* d */3],
    /* e */init$1[/* e */4],
    /* h */init$1[/* h */5],
    /* l */init$1[/* l */6],
    /* f */init$1[/* f */7],
    /* sp */init$1[/* sp */8],
    /* pc */programCount,
    /* mCycles */init$1[/* mCycles */10]
  ];
  var cpuIncPc = /* record */[
    cpuIncPc_000,
    cpuIncPc_001
  ];
  var match = Cpu$GameboyEmulator.exec(programCount)(cpuIncPc, s[/* mmu */4]);
  var cpu = match[0];
  var init$2 = cpu[/* registers */1];
  return /* record */[
          /* frameCount */s[/* frameCount */0],
          /* fps */s[/* fps */1],
          /* gpu */s[/* gpu */2],
          /* cpu : record */[
            /* clock */cpu[/* clock */0] + cpu[/* registers */1][/* mCycles */10] | 0,
            /* registers : record */[
              /* a */init$2[/* a */0],
              /* b */init$2[/* b */1],
              /* c */init$2[/* c */2],
              /* d */init$2[/* d */3],
              /* e */init$2[/* e */4],
              /* h */init$2[/* h */5],
              /* l */init$2[/* l */6],
              /* f */init$2[/* f */7],
              /* sp */init$2[/* sp */8],
              /* pc */cpu[/* registers */1][/* pc */9] & 65535,
              /* mCycles */init$2[/* mCycles */10]
            ]
          ],
          /* mmu */match[1]
        ];
}

exports.Gpu = Gpu;
exports.load = load;
exports.reset = reset;
exports.frame = frame;
/* Utils-GameboyEmulator Not a pure module */
