// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE
'use strict';

var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Renderer$GameboyEmulator = require("./Renderer.bs.js");

function initTileset() {
  return Caml_array.caml_make_vect(384, Caml_array.caml_make_vect(8, Caml_array.caml_make_vect(8, 0)));
}

function make() {
  return /* record */[
          /* mode */0,
          /* clock */0,
          /* line */0,
          /* vram */Caml_array.caml_make_vect(8192, 0),
          /* oam */Caml_array.caml_make_vect(160, 0),
          /* tileset */Caml_array.caml_make_vect(384, Caml_array.caml_make_vect(8, Caml_array.caml_make_vect(8, 0)))
        ];
}

function reset() {
  return /* record */[
          /* mode */0,
          /* clock */0,
          /* line */0,
          /* vram */Caml_array.caml_make_vect(8192, 0),
          /* oam */Caml_array.caml_make_vect(160, 0),
          /* tileset */Caml_array.caml_make_vect(384, Caml_array.caml_make_vect(8, Caml_array.caml_make_vect(8, 0)))
        ];
}

function step(mCycles, renderer, gpu) {
  var modeclock = gpu[/* clock */1] + mCycles | 0;
  var gpu_000 = /* mode */gpu[/* mode */0];
  var gpu_002 = /* line */gpu[/* line */2];
  var gpu_003 = /* vram */gpu[/* vram */3];
  var gpu_004 = /* oam */gpu[/* oam */4];
  var gpu_005 = /* tileset */gpu[/* tileset */5];
  var gpu$1 = /* record */[
    gpu_000,
    /* clock */modeclock,
    gpu_002,
    gpu_003,
    gpu_004,
    gpu_005
  ];
  var match = gpu_000;
  if (match > 3 || match < 0) {
    return gpu$1;
  } else {
    switch (match) {
      case 0 : 
          if (modeclock >= 51) {
            console.log("hblank");
            var line = gpu_002 + 1 | 0;
            if (line === 143) {
              return Renderer$GameboyEmulator.renderToScreen(renderer, /* record */[
                          /* mode */1,
                          /* clock */0,
                          /* line */line,
                          gpu_003,
                          gpu_004,
                          gpu_005
                        ]);
            } else {
              return /* record */[
                      /* mode */2,
                      /* clock */0,
                      /* line */line,
                      gpu_003,
                      gpu_004,
                      gpu_005
                    ];
            }
          } else {
            return gpu$1;
          }
      case 1 : 
          if (modeclock >= 114) {
            console.log("vblank");
            var line$1 = gpu_002 + 1 | 0;
            if (line$1 > 153) {
              return /* record */[
                      /* mode */2,
                      /* clock */0,
                      /* line */0,
                      gpu_003,
                      gpu_004,
                      gpu_005
                    ];
            } else {
              return /* record */[
                      gpu_000,
                      /* clock */0,
                      /* line */line$1,
                      gpu_003,
                      gpu_004,
                      gpu_005
                    ];
            }
          } else {
            return gpu$1;
          }
      case 2 : 
          if (modeclock >= 20) {
            console.log("oam read");
            return /* record */[
                    /* mode */3,
                    /* clock */0,
                    gpu_002,
                    gpu_003,
                    gpu_004,
                    gpu_005
                  ];
          } else {
            return gpu$1;
          }
      case 3 : 
          if (modeclock >= 43) {
            console.log("vram read");
            return Renderer$GameboyEmulator.renderScan(/* record */[
                        /* mode */0,
                        /* clock */0,
                        gpu_002,
                        gpu_003,
                        gpu_004,
                        gpu_005
                      ]);
          } else {
            return gpu$1;
          }
      
    }
  }
}

exports.initTileset = initTileset;
exports.make = make;
exports.reset = reset;
exports.step = step;
/* Renderer-GameboyEmulator Not a pure module */
